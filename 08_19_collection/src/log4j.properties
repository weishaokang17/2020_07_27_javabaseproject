#一、指定日志的输出级别与输出端
#下面的Console和A名字是任意起的，和下面的控制台输出配置、文件输出配置 的Console和A名字要相同。
log4j.rootLogger=DEBUG,Console,A

#二、控制台输出配置
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d [%t] %-5p [%c] - %m%n


# 三、文件输出配置
log4j.appender.A = org.apache.log4j.DailyRollingFileAppender
#指定日志的输出路径
log4j.appender.A.File = E:/log/java/log.txt
log4j.appender.A.Append = true
log4j.appender.A.Threshold = DEBUG
#使用自定义日志格式化器
log4j.appender.A.layout = org.apache.log4j.PatternLayout
# 三、指定日志的输出格式
#
#    %m   输出代码中指定的消息
#　　%p   输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
#　　%r   输出自应用启动到输出该log信息耗费的毫秒数
#　　%c   输出所属的类目，通常就是所在类的全名
#　　%t   输出产生该日志事件的线程名
#　　%n   输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”
#　　%d   输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002年10月18日  22 ： 10 ： 28 ， 921
#　　%l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: 10 )
#
log4j.appender.A.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [%l: %t:%r ] - [ %p ]  %m%n
#指定日志的文件编码
log4j.appender.A.encoding=UTF-8